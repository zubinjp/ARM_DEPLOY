trigger:
  branches:
    include:
      - main  # Trigger pipeline on changes to the 'main' branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Group1  # Reference the variable group containing predefined variables
  - name: subnetName
    value: 'mySubnet'
  - name: vnetName
    value: 'myVnet'
  - name: system.debug
    value: 'true'  # Enable debug logs

jobs:
  - job: DeployARMTemplate
    displayName: 'Deploy ARM Template to Azure'
    steps:
      # Step 1: Print Debug Information
      - script: |
          echo "DEBUG: resourceGroupName: $(resourceGroupName)"
          echo "DEBUG: subscriptionId: $(subscriptionId)"
          echo "DEBUG: vmUsername: $(vmUsername)"
          echo "DEBUG: vmssName: $(vmssName)"
          echo "DEBUG: subnetName: $(subnetName)"
          echo "DEBUG: vnetName: $(vnetName)"
        displayName: 'Print Debug Information'

      # Step 2: Validate and Deploy ARM Template
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'VMSS-connection'  # Azure DevOps Service connection
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            echo "##vso[task.debug]Enabling debug logs..."
            echo "Setting subscription context..."
            az account set --subscription "$(subscriptionId)"

            # Validate ARM Template
            echo "Validating ARM Template..."
            validation_output=$(az deployment group validate \
              --resource-group "$(resourceGroupName)" \
              --template-file arm-temp.json \
              --parameters \
              adminUsername="$(vmUsername)" \
              adminPassword="$(vmPassword)" \
              roleAssignmentPrincipalId="$(roleAssignmentPrincipalId)" \
              roleDefinitionId="$(roleDefinitionId)" \
              subscriptionId="$(subscriptionId)" \
              subnetName="$(subnetName)" \
              vnetName="$(vnetName)" \
              vmssName="$(vmssName)" \
              resourceGroupName="$(resourceGroupName)" \
              --verbose 2>&1)

            echo "Validation Output: $validation_output"

            # Check validation output for errors
            if [[ "$validation_output" =~ "Error:" ]]; then
              echo "##[error] ARM Template validation failed."
              echo "##[debug]$validation_output"
              exit 1
            fi

            echo "ARM Template validation successful. Proceeding with deployment."

            # Deploy ARM Template
            echo "Deploying ARM Template..."
            deploy_output=$(az deployment group create \
              --resource-group "$(resourceGroupName)" \
              --template-file arm-temp.json \
              --parameters \
              adminUsername="$(vmUsername)" \
              adminPassword="$(vmPassword)" \
              roleAssignmentPrincipalId="$(roleAssignmentPrincipalId)" \
              roleDefinitionId="$(roleDefinitionId)" \
              subscriptionId="$(subscriptionId)" \
              subnetName="$(subnetName)" \
              vnetName="$(vnetName)" \
              vmssName="$(vmssName)" \
              resourceGroupName="$(resourceGroupName)" \
              --verbose 2>&1)

            echo "Deployment Output: $deploy_output"

            # Check for deployment errors in the output
            if [[ "$deploy_output" =~ "Error:" ]]; then
              echo "##[error] ARM Template deployment failed."
              echo "##[debug]$deploy_output"
              exit 1
            fi

            echo "ARM Template deployed successfully!"
        displayName: 'Deploy ARM Template'